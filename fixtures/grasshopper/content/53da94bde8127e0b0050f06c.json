{
    "__v": 0,
    "_id": {
        "$oid": "53da94bde8127e0b0050f06c"
    },
    "fields": {
        "title": "Options",
        "title-slug": "options",
        "computed-slug": "/docs/masseuse/views/options",
        "sections": [
            {
                "snippet": "The options object can be passed into a view or defined on the view's `defaultOptions` property.\n\nAn example of a full options object:\n\n```javascript\n{\n   name : 'MyName',\n   appendTo : '#sizzle'\n   ModelType : MyCustomModel,\n   modelData : { ... },\n   bindings : [\n       ['model', 'change:price', 'showNewPrice'],\n       ['model', 'change:discount', 'animateAdvertisement']\n   ],\n   templateHtml : '<div><%= price %> : <%= discount %></div>',\n       // Underscore templating that will - if provided - be turned into this.template using\n       _.template(templateHtml)\n\n}\n```\n\n## name\n\nUsed for debugging only. Helpful for `console.log(...)` calls.\n\n## appendTo\n\nSpecify a sizzle selector, jQuery object, or DOM element to append to.\n\n## prependTo\n\nThe opposite of `appendTo`. Doesn't work if both `appendTo` and `prependTo` are defined (or it probably does work, but we are not sure which one it will use)\n\n## ModelType\n\nA backbone model to create as the view's `this.model`\n\n## modelData\n\nData to set on the model\n\n## bindings\n\nA  two dimensional array of backbone event listener arguments. Take an example\n```javascript\n{\n[\n       ['model', 'change:price', 'showNewPrice'],\n       ['model', 'change:discount', 'animateAdvertisement']\n   ]\n}\n```\n\nFirst item in array is a property in view.\nThe second item is an backbone event name.\nThe third one a callback name.\n\n#templateHtml\n\nA lodash template to be rendered.\n\n# viewOptions\n\nYou can also pass a viewOptions in options that will be passed through to backbone\n\n'model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events',  'name', 'appendTo', 'prependTo', 'wrapper'",
                "title": "Options"
            }
        ],
        "recipes": []
    },
    "meta": {
        "node": {
            "$oid": "53d66454cc49210b001d0f00"
        },
        "type": {
            "$oid": "53d5ed8b336c520b00ead171"
        },
        "labelfield": "title",
        "typelabel": "Recipe",
        "created": {
            "$date": 1406833853527
        },
        "lastmodified": {
            "$date": 1406835452150
        }
    }
}